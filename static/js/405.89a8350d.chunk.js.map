{"version":3,"file":"static/js/405.89a8350d.chunk.js","mappings":"uRAEaA,EAAQC,EAAAA,GAAAA,MAAH,gEACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,MAAxB,IAGLC,EAAQP,EAAAA,GAAAA,MAAH,0HAGH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACE,SAAAH,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,SAAnB,IACA,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,EAAlB,IAGPC,EAAeZ,EAAAA,GAAAA,OAAH,iMACZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,IACG,SAAAZ,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,IACD,SAAAZ,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,MAAxB,IACI,SAAAL,GAAC,OAAIA,EAAEC,MAAMM,OAAOM,MAAnB,IAEX,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,QAAQC,IAApB,IACM,SAAAf,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,EAAlB,IAIPM,EAAOjB,EAAAA,GAAAA,KAAH,4FAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,I,SCdJK,EAAgC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAO7C,OACE,UAAC,EAAD,CAASA,SAPU,SAACC,GACpBA,EAAEC,iBACFF,EAASC,EAAEE,cAAcC,SAASC,MAAMC,OACxCL,EAAEE,cAAcI,OACjB,EAGC,WACE,SAAC,EAAD,CAAUC,QAAQ,QAAlB,UACE,SAAC,EAAD,CACEC,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,YAAY,qBAGhB,SAAC,EAAD,CAAiBH,KAAK,SAAtB,sBAGL,E,UCKD,EA/Be,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAChD,GAAgCC,EAAAA,EAAAA,GAC9BC,EAAAA,GAEAH,GAHF,eAAOI,EAAP,KAAeC,EAAf,KAAuBC,EAAvB,KAMMC,EAAe,oDAAgDP,EAAhD,MAOrB,OACE,iCACE,SAACjB,EAAD,CAAaC,SAPS,SAACK,GAEzBU,EAD8C,KAAVV,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEjE,IAKe,YAAXgB,IAAwB,SAACG,EAAA,EAAD,IACb,aAAXH,GAAyBD,EAAOK,OAAS,IACxC,SAACC,EAAA,EAAD,CAAeN,OAAQA,IAEb,aAAXC,GAAyBD,EAAOK,OAAS,IACxC,SAACE,EAAA,EAAD,CAASC,QAASL,IAER,aAAXF,IAAyB,SAACM,EAAA,EAAD,CAASC,QAASN,MAGjD,C","sources":["components/SearchPanel/SearchPanel.styled.tsx","components/SearchPanel/SearchPanel.tsx","pages/Movies/Movies.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border-color: ${p => p.theme.colors.bgPrimary};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const SearchButton = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  background-color: ${p => p.theme.colors.yellow};\n  min-width: 100px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n","import React from \"react\";\nimport * as SC from './SearchPanel.styled';\n\ninterface IProps {\n  onSubmit: (movie: string) => void;\n}\n\ninterface FormElements extends HTMLFormControlsCollection {\n    movie: HTMLInputElement\n}\n\ninterface InputMovieElement extends HTMLFormElement {\n   readonly elements: FormElements\n}\n\nexport const SearchPanel: React.FC<IProps> = ({onSubmit}) => {\n  const handleSubmit = (e: React.FormEvent<InputMovieElement> ) => {\n    e.preventDefault();\n    onSubmit(e.currentTarget.elements.movie.value);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <SC.Form onSubmit={handleSubmit}>\n      <SC.Label htmlFor=\"movie\">\n        <SC.Input\n          type=\"text\"\n          name=\"movie\"\n          id=\"movie\"\n          placeholder=\"Search movies\"\n        />\n      </SC.Label>\n      <SC.SearchButton type=\"submit\">Search</SC.SearchButton>\n    </SC.Form>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovies } from 'Api/Api';\nimport { Message } from 'components/Message/Message';\nimport { GalleryMovies } from 'components/GalleryMovies/GalleryMovies';\nimport { SearchPanel } from '../../components/SearchPanel/SearchPanel';\nimport { useGetArreyDataPage } from 'Hooks/useGetArreyDataPage';\nimport { IMovie } from 'types/types';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const paramMovie = searchParams.get('movie') ?? '';\n  const [movies, status, error] = useGetArreyDataPage(\n    getMovies,\n    // 'results',\n    paramMovie\n  );\n\n  const noMoviesMessage = `There are no movies matching your search \"${paramMovie}\".`;\n\n  const updateQueryString = (movie:string) => {\n    const nextMovie: {movie?: string} = movie !== '' ? { movie } : {};\n    setSearchParams(nextMovie);\n  };\n\n  return (\n    <>\n      <SearchPanel onSubmit={updateQueryString} />\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && movies.length > 0 && (\n        <GalleryMovies movies={movies as IMovie[]} />\n      )}\n      {status === 'resolved' && movies.length < 1 && (\n        <Message message={noMoviesMessage} />\n      )}\n      {status === 'rejected' && <Message message={error} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Label","styled","p","theme","fontSizes","s","fontWeights","medium","Input","colors","bgPrimary","radii","sm","SearchButton","space","yellow","borders","none","Form","SearchPanel","onSubmit","e","preventDefault","currentTarget","elements","movie","value","reset","htmlFor","type","name","id","placeholder","useSearchParams","searchParams","setSearchParams","paramMovie","get","useGetArreyDataPage","getMovies","movies","status","error","noMoviesMessage","Loader","length","GalleryMovies","Message","message"],"sourceRoot":""}